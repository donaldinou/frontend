jQuery(document).ready(function() {

    // event declaration
    jQuery(document).on('change', 'input[name="estimation\\[agencyRequest\\]"], input[name="contact_estimation\\[agencyRequest\\]"]', toggleContactDetails);
    jQuery(document).on('change', 'input[name="estimation\\[vue\\]"]', toggleViewDetails);
    jQuery(document).on('change', 'input[name="estimation\\[type\\]"]', toggleTypeDetails);

    // trigger
    jQuery('input[name="estimation\\[agencyRequest\\]"]').trigger('change');
    jQuery('input[name="estimation\\[vue\\]"]').trigger('change');
    jQuery('input[name="estimation\\[type\\]"]').trigger('change');

    /**
     *
     */
    function toggleContactDetails(event) {
        var element = jQuery(event.currentTarget);
        if (element.val() == 1) {
            jQuery('#estimate-contact').parents('.panel').removeClass('hidden');
            jQuery('#estimate-contact').find('input').prop('disabled', false);
            jQuery('a[href="#estimate-contact"]').removeClass('hidden');
        } else {
            jQuery('#estimate-contact').parents('.panel').addClass('hidden');
            jQuery('#estimate-contact').find('input').prop('disabled', true);
            jQuery('a[href="#estimate-contact"]').addClass('hidden');
        }
    }

    /**
     *
     */
    function toggleViewDetails(event) {
        var element = jQuery(event.currentTarget);
        if (element.prop('checked')) {
            jQuery('input[name="estimation\\[vue_detail\\]"]').removeClass('hidden');
        } else {
            jQuery('input[name="estimation\\[vue_detail\\]"]').addClass('hidden');
        }
    }

    /**
     *
     */
    function toggleTypeDetails(event) {
        var element = jQuery(event.currentTarget);
        if (element.val() == 'M') {
            jQuery('input[name="estimation\\[surface_terrain\\]"]').parents('.form-group').parent().removeClass('hidden');
            jQuery('input[name="estimation\\[terrasse\\]"]').parents('.form-group').parent().removeClass('hidden');
            jQuery('input[name="estimation\\[etage\\]"]').parents('.form-group').parent().addClass('hidden');
            jQuery('input[name="estimation\\[nb_etages\\]"]').parents('.form-group').parent().addClass('hidden');
        } else {
            jQuery('input[name="estimation\\[surface_terrain\\]"]').parents('.form-group').parent().addClass('hidden');
            jQuery('input[name="estimation\\[terrasse\\]"]').parents('.form-group').parent().addClass('hidden');
            jQuery('input[name="estimation\\[etage\\]"]').parents('.form-group').parent().removeClass('hidden');
            jQuery('input[name="estimation\\[nb_etages\\]"]').parents('.form-group').parent().removeClass('hidden');
        }
    }

});

// Generated by CoffeeScript 1.6.3
(function() {
  var VL_MAP_READY_EVENT;

  VL_MAP_READY_EVENT = "vl_map_ready";

  $(function() {
    window.vl_on_map_ready = function() {
      return $(document).trigger(VL_MAP_READY_EVENT);
    };
    return window.vl_if_map_ready = function(cb) {
      return cb();
    };
  });

}).call(this);


/*
(function(){var c,d,a={}.hasOwnProperty,b=function(h,f){for(var e in f){if(a.call(f,e)){h[e]=f[e]}}function g(){this.constructor=h}g.prototype=f.prototype;h.prototype=new g();h.__super__=f.prototype;return h};c=function(){var p,j,g,r,q,t,k,n,s,f,l,h,o,i,m,e;g=d3.locale({decimal:",",thousands:" ",grouping:[3],currency:["","EUR"],dateTime:"%a %b %e %X %Y",date:"%d/%m/%Y",time:"%H:%M:%S",periods:[],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});d3.format=g.numberFormat;k={top:20,right:20,bottom:50,left:50};h=$(".graph").width()-k.left-k.right;r=300-k.top-k.bottom;o=d3.time.scale().range([0,h]);m=d3.scale.linear().range([r,0]);i=d3.svg.axis().scale(o).ticks(4).tickSize(-r).tickSubdivide(true).orient("bottom");e=d3.svg.axis().scale(m).ticks(6).tickSize(-h).tickSubdivide(true).orient("left");t=d3.svg.line().x(function(u){return o(u.date)}).y(function(u){return m(u.value)});l=d3.select(".graph").append("svg").attr("width",h+k.left+k.right).attr("height",r+k.top+k.bottom).append("g").attr("transform","translate("+k.left+","+k.top+")");p=$(".graph").data("type-a");j=$(".graph").data("type-m");f=d3.time.format("%Y%m").parse;p.forEach(function(u){u.date=f(u.date);return u.value=+u.value});j.forEach(function(u){u.date=f(u.date);return u.value=+u.value});s=function(w,u,y){var x,v;x=d3.extent(w,function(z){return z[y]});v=d3.extent(u,function(z){return z[y]});return[d3.min([x[0],v[0]]),d3.max([x[1],v[1]])]};o.domain(s(p,j,"date"));n=s(p,j,"value");n[0]=n[0]-(n[1]-n[0])/3;n[1]=n[1]+(n[1]-n[0])/3;m.domain(n);l.append("g").attr("class","x axis").attr("transform","translate(0,"+r+")").call(i);l.append("g").attr("class","y axis").call(e);l.append("path").datum(p).attr("class","line type_a").attr("d",t);l.append("path").datum(j).attr("class","line type_m").attr("d",t);q=l.selectAll(".legend").data([{t:"m",l:$(".graph").data("legend-type-m")},{t:"a",l:$(".graph").data("legend-type-a")}]).enter().append("g").attr("class","legend").attr("transform",function(v,u){return"translate("+u*100+",0)"});q.append("rect").attr("x",0).attr("y",r+k.top+5).attr("width",18).attr("height",18).attr("class",function(u){return"type_"+u.t});return q.append("text").attr("x",0).attr("y",r+k.top+5).attr("dx","25px").attr("dy",".8em").style("text-anchor","start").text(function(u){return u.l})};d=function(){var m,g,k,e,f,j,h,l,i;j=$(".map");k=j.data().loc;f=new google.maps.LatLng(parseFloat(k.lat),parseFloat(k.lon));e=new google.maps.Map(j[0],{center:f,mapTypeId:google.maps.MapTypeId.ROADMAP,zoom:12});m=(function(n){b(o,n);function o(s,p,q,r){this.map=s;this.center=p;this.rel_pos=q;this.div_id=r;this.setMap(this.map);this.width=200;this.height=120}o.prototype.onAdd=function(){this.div=$(this.div_id);this.div.width(this.width+"px");this.div.height(this.height+"px");this.div.css("position","absolute");return this.getPanes().overlayLayer.appendChild(this.div[0])};o.prototype.draw=function(){var r,p,s,q;q=this.getProjection();p=q.fromLatLngToDivPixel(f);r=80;s=p.x+this.rel_pos*r+(this.rel_pos<0?-this.width:0);this.div.css("left",s+"px");return this.div.css("top",(p.y-this.height/2)+"px")};o.prototype.onRemove=function(){this.div[0].parentNode.removeChild(this.div[0]);return this.div=null};return o})(google.maps.OverlayView);h={"#overlay_price_a":-1,"#overlay_price_m":1};i=[];for(g in h){l=h[g];if($(g).length>0){i.push(new m(e,f,l,g))}else{i.push(void 0)}}return i};$(function(){var e;e=$(".map");if(e.length>0&&e.is(":visible")){window.vl_if_map_ready(function(){return d()})}if($(".graph").length>0){return c()}})}).call(this);
*/

(function() {
    var c, d, a = {}.hasOwnProperty,
        b = function(h, f) {
            for (var e in f) {
                if (a.call(f, e)) {
                    h[e] = f[e]
                }
            }

            function g() {
                this.constructor = h
            }
            g.prototype = f.prototype;
            h.prototype = new g();
            h.__super__ = f.prototype;
            return h
        };
    c = function() {
        var p, j, g, r, q, t, k, n, s, f, l, h, o, i, m, e;
        g = d3.locale({
            decimal: ",",
            thousands: " ",
            grouping: [3],
            currency: ["", "EUR"],
            dateTime: "%a %b %e %X %Y",
            date: "%d/%m/%Y",
            time: "%H:%M:%S",
            periods: [],
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
        });
        d3.format = g.numberFormat;
        k = {
            top: 20,
            right: 20,
            bottom: 50,
            left: 50
        };
        h = $(".graph").width() - k.left - k.right;
        r = 300 - k.top - k.bottom;
        o = d3.time.scale().range([0, h]);
        m = d3.scale.linear().range([r, 0]);
        i = d3.svg.axis().scale(o).ticks(4).tickSize(-r).tickSubdivide(true).orient("bottom");
        e = d3.svg.axis().scale(m).ticks(6).tickSize(-h).tickSubdivide(true).orient("left");
        t = d3.svg.line().x(function(u) {
            return o(u.date)
        }).y(function(u) {
            return m(u.value)
        });
        l = d3.select(".graph").append("svg").attr("width", h + k.left + k.right).attr("height", r + k.top + k.bottom).append("g").attr("transform", "translate(" + k.left + "," + k.top + ")");
        p = $(".graph").data("type-a");
        j = $(".graph").data("type-m");
        f = d3.time.format("%Y%m").parse;
        p.forEach(function(u) {
            u.date = f(u.date);
            return u.value = +u.value
        });
        j.forEach(function(u) {
            u.date = f(u.date);
            return u.value = +u.value
        });
        s = function(w, u, y) {
            var x, v;
            x = d3.extent(w, function(z) {
                return z[y]
            });
            v = d3.extent(u, function(z) {
                return z[y]
            });
            return [d3.min([x[0], v[0]]), d3.max([x[1], v[1]])]
        };
        o.domain(s(p, j, "date"));
        n = s(p, j, "value");
        n[0] = n[0] - (n[1] - n[0]) / 3;
        n[1] = n[1] + (n[1] - n[0]) / 3;
        m.domain(n);
        l.append("g").attr("class", "x axis").attr("transform", "translate(0," + r + ")").call(i);
        l.append("g").attr("class", "y axis").call(e);
        l.append("path").datum(p).attr("class", "line type_a").attr("d", t);
        l.append("path").datum(j).attr("class", "line type_m").attr("d", t);
        q = l.selectAll(".legend").data([{
            t: "m",
            l: $(".graph").data("legend-type-m")
        }, {
            t: "a",
            l: $(".graph").data("legend-type-a")
        }]).enter().append("g").attr("class", "legend").attr("transform", function(v, u) {
            return "translate(" + u * 100 + ",0)"
        });
        q.append("rect").attr("x", 0).attr("y", r + k.top + 5).attr("width", 18).attr("height", 18).attr("class", function(u) {
            return "type_" + u.t
        });
        return q.append("text").attr("x", 0).attr("y", r + k.top + 5).attr("dx", "25px").attr("dy", ".8em").style("text-anchor", "start").text(function(u) {
            return u.l
        })
    };
    /*d = function() {
        var m, g, k, e, f, j, h, l, i;
        j = $(".map");
        k = j.data().loc;
        f = new google.maps.LatLng(parseFloat(k.lat), parseFloat(k.lon));
        e = new google.maps.Map(j[0], {
            center: f,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            zoom: 12
        });
        m = (function(n) {
            b(o, n);

            function o(s, p, q, r) {
                this.map = s;
                this.center = p;
                this.rel_pos = q;
                this.div_id = r;
                this.setMap(this.map);
                this.width = 200;
                this.height = 120
            }
            o.prototype.onAdd = function() {
                this.div = $(this.div_id);
                this.div.width(this.width + "px");
                this.div.height(this.height + "px");
                this.div.css("position", "absolute");
                return this.getPanes().overlayLayer.appendChild(this.div[0])
            };
            o.prototype.draw = function() {
                var r, p, s, q;
                q = this.getProjection();
                p = q.fromLatLngToDivPixel(f);
                r = 80;
                s = p.x + this.rel_pos * r + (this.rel_pos < 0 ? -this.width : 0);
                this.div.css("left", s + "px");
                return this.div.css("top", (p.y - this.height / 2) + "px")
            };
            o.prototype.onRemove = function() {
                this.div[0].parentNode.removeChild(this.div[0]);
                return this.div = null
            };
            return o
        })(google.maps.OverlayView);
        h = {
            "#overlay_price_a": -1,
            "#overlay_price_m": 1
        };
        i = [];
        for (g in h) {
            l = h[g];
            if ($(g).length > 0) {
                i.push(new m(e, f, l, g))
            } else {
                i.push(void 0)
            }
        }
        return i
    };*/
    $(function() {
        var e;
        e = $(".map");
        if (e.length > 0 && e.is(":visible")) {
            window.vl_if_map_ready(function() {
                return d()
            })
        }
        if ($(".graph").length > 0) {
            return c()
        }
    })
}).call(this);
