<?php

namespace Acreat\InseeBundle\Repository {

    use Doctrine\ORM\EntityRepository;
    use Doctrine\ORM\NoResultException;
    use Acreat\InseeBundle\Entity\InseeCity;

    /**
     * InseeCityRepository
     *
     * This class was generated by the Doctrine ORM. Add your own custom
     * repository methods below.
     */
    class InseeCityRepository extends EntityRepository {

        public function findOneByLatLng($lat, $lng, $precision=2) {
            $query = $this->getEntityManager()
                ->createQuery(
                    'SELECT ic '.
                    'FROM AcreatInseeBundle:InseeCity ic '.
                    'WHERE ROUND(ic.lat, :precision) = :lat '.
                    'AND ROUND(ic.lng, :precision) = :lng '
                )
                ->setParameter('lat', $lat)
                ->setParameter('lng', $lng)
                ->setParameter('precision', $precision)
                ->setMaxResults(1);
             try {
                return $query->getSingleResult();
            } catch (NoResultException $e) {
                return null;
            }
        }

        /**
         * legacy: inherits from VitelogeEstimation
         */
        public function findNeighbors( InseeCity $city, $distance, $nb_matches ) {
            $qb = $this->_em->createQueryBuilder();
            $qb
                ->select( 'distance' )
                ->addSelect( 'city' )
                ->from( 'VitelogeCoreBundle:Distance', 'distance' )
                ->leftJoin( 'distance.inseeTo', 'city' )
                ->andWhere( 'distance.inseeFrom = :city' )
                ->andWhere( 'distance.googleDistance < :distance')
                ->addOrderBy( 'distance.googleDistance', 'ASC' )
                ->setParameter( 'city', $city )
                ->setParameter( 'distance', $distance )
                ->setMaxResults( $nb_matches )
            ;
            return $qb->getQuery()->getResult();
        }

    }

}
